#Область ПолучениеТокена
Функция ПолучитьТокен(Кабинет) Экспорт

	Если Не ЗначениеЗаполнено(Кабинет) Тогда
		Возврат Неопределено;
	КонецЕсли;

	Токен = ПолучитьТокенИзРегистра(Кабинет);
	
	Если Не ЗначениеЗаполнено(Токен) Тогда
		Токен = ПолучитьСтруктуруНовогоТокена(Кабинет);
		Если ЗначениеЗаполнено(Токен) Тогда
			ЗаписатьНовыйТокенВРегистр(Кабинет, Токен);
		КонецЕсли;
	КонецЕсли;
	Возврат Токен;
КонецФункции

Функция ПолучитьСтрокуПараметровДляПолученияТокена(Кабинет) Экспорт
	
	СтруктураПараметровКабинета = ПолучитьСтруктуруПараметровКабинета(Кабинет);
	СтрокаПараметров = "grant_type=client_credentials";
	Для Каждого КлючЗначение Из СтруктураПараметровКабинета Цикл
		СтрокаПараметров = СтрокаПараметров + "&" + КлючЗначение.Ключ + "=" + КлючЗначение.Значение;
	КонецЦикла;

	Возврат СтрокаПараметров;

КонецФункции

Функция ПолучитьСтруктуруПараметровКабинета(Кабинет) Экспорт

	СтруктураВозврата = Новый Структура("client_id, client_secret");

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	КлиентИД как client_id,
				   |	КлиентСекрет как client_secret
				   |ИЗ
				   |	Справочник.Кабинеты
				   |ГДЕ
				   |	Ссылка = &Кабинет";

	Запрос.УстановитьПараметр("Кабинет", Кабинет);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
	Возврат СтруктураВозврата;

КонецФункции

Функция ПолучитьТокенИзРегистра(Кабинет) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ТокеныКабинетов.Токен
				   |ИЗ
				   |	РегистрСведений.ТокеныКабинетов КАК ТокеныКабинетов
				   |ГДЕ
				   |	ТокеныКабинетов.Кабинет = &Кабинет
				   |	И ТокеныКабинетов.ДатаОкончанияДействия > &ТекущаяДата";
	Запрос.УстановитьПараметр("Кабинет", Кабинет);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Токен, Неопределено);

КонецФункции

Функция ПолучитьСтруктуруНовогоТокена(Кабинет) Экспорт

	Соединение = Новый HTTPСоединение("api.avito.ru", , , , , , Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос("/token/" + ПолучитьСтрокуПараметровДляПолученияТокена(Кабинет));
	Ответ = Соединение.Получить(Запрос);
	ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	Если Ответ.КодСостояния = 200 Тогда
		Возврат ОбщегоНазначения.ПреобразоватьJSONВСтруктуру(ТекстОтвета);
	Иначе
		ЗаписьЖурналаРегистрации("Получение токена", УровеньЖурналаРегистрации.Ошибка, , Кабинет, ТекстОтвета);
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура ЗаписатьНовыйТокенВРегистр(Кабинет, СтруктураНовогоТокена)

	НаборЗаписей = РегистрыСведений.ТокеныКабинетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Кабинет.Установить();

	Строка = НаборЗаписей.Добавить();
	Строка.Кабинет = Кабинет;
	Строка.Токен = СтруктураНовогоТокена.access_token;
	Строка.ДатаОкончанияДействия = ТекущаяДата() + СтруктураНовогоТокена.expires_in;
	НаборЗаписей.Записать();

КонецПроцедуры

#КонецОбласти
